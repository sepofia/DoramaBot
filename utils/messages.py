"""
it might be reasonable to add choosing language:
- in the separate function with the global LANGUAGE parameter for this file
- create dictionary with the same phrases in the different languages
"""

import pandas as pd

# TODO: move to the json-file
COLUMNS = {
    'ru': ['–ù–∞–∑–≤–∞–Ω–∏–µ', '–û–ø–∏—Å–∞–Ω–∏–µ', '–†–µ–π—Ç–∏–Ω–≥ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞', '–ñ–∞–Ω—Ä—ã', '–°—Ç—Ä–∞–Ω–∞']
    , 'en': ['Name', 'Description', 'KP rating', 'Genres', 'Country']
}


def start(name: str, language: str) -> str:
    if language == 'en':
        return f'Hi {name}! Nice to see you here! \nWelcome to the world of K-dramas ü§ç'
    if language == 'ru':
        return f'–ü—Ä–∏–≤–µ—Ç, {name}, —Ä–∞–¥–∞ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –∑–¥–µ—Å—å! \n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –¥–æ—Ä–∞–º ü§ç'


def help_message():
    pass


def random_drama(drama: pd.DataFrame | pd.Series, language: str) -> str:
    header = {
        'ru': '–ó–¥–µ—Å—å —Ç–≤–æ—è —Å–ª—É—á–∞–π–Ω–∞—è –¥–æ—Ä–∞–º–∞ –Ω–µ —Å—Ç–∞—Ä—à–µ 2016 –≥–æ–¥–∞ –∏ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º –∫–∏–Ω–æ–ø–æ–∏—Å–∫–∞ –≤—ã—à–µ 7.1:\n'
        , 'en': 'Here is your random K-drama from 2016 to 2024 and with a kinopoisk rating of over 7.1:\n'
    }
    text_items = [header[language]]
    for j, col in enumerate(COLUMNS['en']):
        if col == 'Name':
            item = f'[{drama[col]}]({drama["Link"]})'
        else:
            item = f'*{COLUMNS[language][j]}*: _{drama[col]}_'
        text_items.append(item)
    text_items.append('')
    return '\n'.join(text_items)


def last_dramas(dramas_df: pd.DataFrame, language: str) -> str:
    header = {
        'ru': '–ó–¥–µ—Å—å 5 –ª—É—á—à–∏—Ö –∫–æ—Ä–µ–π—Å–∫–∏—Ö –¥–æ—Ä–∞–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –≥–æ–¥–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É –ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞:\n'
        , 'en': 'Here are 5 best last K-dramas by Kinopoisk rating:\n'
    }
    unsuccessful = {
        'ru': '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ —Å–º–æ–≥–ª–∞ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –¥–æ—Ä–∞–º—É –¥–ª—è —Ç–µ–±—è, –Ω–æ —è –µ—â—ë —É—á—É—Å—å ü•∫'
        , 'en': "Unfortunately I can't find a good K-drama for you now, but I'm still learning ü•∫"
    }

    if len(dramas_df) == 0:
        return unsuccessful[language]

    text_items = [header[language]]
    for i in range(len(dramas_df)):
        for j, col in enumerate(COLUMNS['en']):
            if col == 'Name':
                item = f'*{i + 1}.* [{dramas_df[col][i]}]({dramas_df["Link"][i]})'
                text_items.append(item)
            else:
                if dramas_df[col][i] != 'None':
                    item = f'*{COLUMNS[language][j]}*: _{dramas_df[col][i]}_'
                    text_items.append(item)
        text_items.append('')
    return '\n'.join(text_items)


def user_dramas(dramas_df: pd.DataFrame | None, language: str) -> str:

    unsuccessful = {
        'ru': '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ —Å–º–æ–≥–ª–∞ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –¥–æ—Ä–∞–º—É –ø–æ —Ç–≤–æ–∏–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º...'
        , 'en': "Unfortunately I can't find good K-dramas for you by your recommendations..."
    }
    header = {
        'ru': '–î–æ—Ä–∞–º—ã –ø–æ —Ç–≤–æ–µ–º—É –∑–∞–ø—Ä–æ—Å—É:\n'
        , 'en': 'K-dramas for your query:\n'
    }

    if (dramas_df is None) or (len(dramas_df) == 0):
        return unsuccessful[language]

    text_items = [header[language]]
    for i in range(len(dramas_df)):
        for j, col in enumerate(COLUMNS['en']):
            if col == 'Name':
                item = f'*{i + 1}.* [{dramas_df[col][i]}]({dramas_df["Link"][i]})'
                text_items.append(item)
            else:
                if not (dramas_df[col][i] is None):
                    item = f'*{COLUMNS[language][j]}*: _{dramas_df[col][i]}_'
                    text_items.append(item)
        text_items.append('')
    return '\n'.join(text_items)


def select(language: str) -> str:
    text = {
        'ru': '–î–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º –¥–æ—Ä–∞–º—É –ø–æ —Ç–≤–æ–∏–º –ø–æ–∂–µ–ª–∞–Ω–∏—è–º! –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –∂–∞–Ω—Ä:'
              '\n_–î–ª—è –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É_ /cancel.\n'
        , 'en': "Let's choose K-dramas especially for you! First, choose a genre:"
                "\n_Send the_ /cancel _command to stop._"
    }
    return text[language]


def genre(language: str) -> str:
    # TODO: change the message - "select the minimum year" or in some similar way
    text = {
        'ru': '–ó–∞–ø–æ–º–Ω–∏–ª–∞! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É –ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞:'
              '\n_–î–ª—è –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É_ /cancel.\n'
        , 'en': 'Memorize! Now select a minimum Kinopoist rating:'
                '\n_Send the_ /cancel _command to stop._'
    }
    return text[language]


def rating(language: str) -> str:
    text = {
        'ru': '–ó–∞–ø–æ–º–Ω–∏–ª–∞! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≥–æ–¥ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞:'
              '\n_–î–ª—è –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É_ /cancel.\n'
        , 'en': 'Memorize! Now select a minimum production year:'
                '\n_Send the_ /cancel _command to stop._'
    }
    return text[language]


def year(language: str) -> str:
    text = {
        'ru': '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏ —Å—Ç—Ä–∞–Ω—É:'
              '\n_–î–ª—è –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É_ /cancel.\n'
        , 'en': 'Great! Then specify the county:'
                '\n_Send the_ /cancel _command to stop._'
    }
    return text[language]


def country(language: str) -> str:
    text = {
        'ru': '–°–∫–æ–ª—å–∫–æ –¥–æ—Ä–∞–º –º–Ω–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏?'
              '\n_–î–ª—è –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É_ /cancel.\n'
        , 'en': 'How many K-drams do you want?'
                '\n_Send the_ /cancel _command to stop._'
    }
    return text[language]


def count(language: str) -> str:
    text = {
        'ru': '–ò –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å: —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Ä–∞–º—ã —Å —Å–∞–º—ã–º –≤—ã—Å–æ–∫–∏–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å–ª—É—á–∞–π–Ω—ã–µ?'
        , 'en': "And the last question: do you want to get the highest rated K-dramas or just random ones?"
    }
    return text[language]


# def mode(language: str) -> str:
#     text = {
#         'ru': '–í—Å—ë –∑–∞–ø–∏—Å–∞–ª–∞! –°–µ–π—á–∞—Å –Ω–∞–π–¥—É –¥–ª—è —Ç–µ–±—è –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–æ—Ä–∞–º—ã ^-^'
#         , 'en': "Noted! Let's see what I can find for you ^-^"
#     }
#     return text[language]


def cancel(language: str) -> str:
    text = {
        'ru': '–ù–µ –≤–æ–ø—Ä–æ—Å ;) \n–í—ã–±–µ—Ä–µ–º –¥–æ—Ä–∞–º—ã –¥–ª—è —Ç–µ–±—è –∫–∞–∫-–Ω–∏–±—É–¥—å –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑!'
        , 'en': "Ok! We can choose K-dramas for you at any time ;)"
    }
    return text[language]
